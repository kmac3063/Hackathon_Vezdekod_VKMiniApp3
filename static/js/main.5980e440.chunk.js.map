{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","gyrData","go","fetchedUser","useState","X","Y","a","b","c","walls","m","wls","i","j","push","getWalls","style","backgroundColor","margin","width","height","padding","map","w","position","left","top","CELL_WIDTH","CELL_HEIGHT","marginTop","marginBottom","x","y","z","App","activePanel","setActivePanel","setUser","size","popout","setPopout","setGyrData","useEffect","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5980e440.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar} from '@vkontakte/vkui';\n\nconst Home = ({id, go, fetchedUser, gyrData}) => {\n    const [X, setX] = useState(0)\n    const [Y, setY] = useState(0)\n    const [d, setD] = useState({a:0, b:0, c:0})\n\n    const N = 16\n    const CELL_WIDTH = 20\n    const CELL_HEIGHT = 20\n    const USER_WIDTH = CELL_WIDTH / 2\n    const USER_HEIGHT = CELL_HEIGHT / 2\n\n    const MAP_WIDTH = N * CELL_WIDTH\n    const MAP_HEIGHT = N * CELL_HEIGHT\n\n\n    const getWalls = () => {\n        let m = [\n            \"0000000000000000\",\n            \"0000111111100000\",\n            \"0011100010111110\",\n            \"0010100010100010\",\n            \"0000000010101010\",\n            \"0111111110111010\",\n            \"0010100000101010\",\n            \"0111100111101010\",\n            \"0010100110001010\",\n            \"0010100000001010\",\n            \"0010111111101010\",\n            \"0010000001001010\",\n            \"0110111111001010\",\n            \"0010100000001110\",\n            \"0010111011111000\",\n            \"0000001000000000\"]\n        let wls = []\n        for (let i = 0; i < N; i++) {\n            for (let j = 0; j < N; j++) {\n                if (m[i][j] === '1')\n                    wls.push([j * CELL_WIDTH, i * CELL_HEIGHT])\n            }\n        }\n        return wls\n    }\n    const walls = getWalls()\n\n    return (\n        <Panel id={id} style={{backgroundColor: \"#AAAAAA\"}}>\n            <Div style={{margin: \"auto\", width: \"100px\", height: \"100px\", padding: \"0px\"}}>\n            {walls.map((w) => {\n                return <Div key={w[0] * 100 + w[1]}\n                            style={{position: \"fixed\",\n                                padding:\"0\",\n                                width:CELL_WIDTH, height:CELL_HEIGHT,\n                                left: w[0], top: w[1], backgroundColor: \"#DDDDDD\"}}/>\n\n            })}\n            </Div>\n\n            <Div style={{position: \"absolute\",\n                padding:\"0\",\n                width:USER_WIDTH, height:USER_HEIGHT,\n                left: X, top: Y,\n                backgroundColor: \"#000000\"}}/>\n            <Div style={{marginTop:\"auto\", marginBottom:\"0\"}}>\n                x={gyrData.x}, y={gyrData.y}, z={gyrData.z}\n            </Div>\n        </Panel>\n    );\n}\n\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [gyrData, setGyrData] = useState({x:0, y:0, z:0})\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t} else if (type === 'VKWebAppGyroscopeChanged') {\n\t\t\t\tsetGyrData(data)\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tbridge.send(\"VKWebAppGyroscopeStart\", {\"refresh_rate\": 500});\n\t\t\tsetPopout(null);\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} gyrData={gyrData} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}